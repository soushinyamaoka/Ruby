/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

body {
    height: 100%;
    margin: 0;
}

figure {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
}

figure>img {
    max-width: 100%;
    object-fit: contain;
}

.parent {
    margin: 0 auto;
    width: 80%;
}

.card {
    width: clamp(23ch, 60%, 46ch);
    display: flex;
    flex-direction: column;
    padding: 1rem;
}

:root {
    --coral: hsl(300, 100%, 93%);
    --coral--b: hsl(280, 100%, 70%);
    --blue: hsl(200, 100%, 90%);
    --blue--b: hsl(200, 100%, 80%);
    --green: hsl(113, 85%, 95%);
    --green--b: hsl(84, 71%, 53%);
    --yellow: hsl(30, 100%, 93%);
    --yellow--b: hsl(40, 100%, 80%);
    --main-border: #D9A036;
    --page-padding: 1rem;
}

body {
    font-family: system-ui, serif;
    display: grid;
    align-items: center;
    height: 100%;
}

.box {
    font-size: 2rem;
    padding: 1rem;
    display: grid;
    place-items: center;
    border-radius: 1rem;
    border-style: dashed;
    background-color: var(--coral);
    border: 1px solid var(--coral--b);
}

.coral {
    background-color: var(--coral);
    border: 1px solid var(--coral--b);
}

.yellow {
    background-color: var(--yellow);
    border: 1px solid var(--yellow--b);
}

.main,
.card {
    /* background-color: var(--blue); */
    /* border: 1px solid var(--blue--b); */
}

.green,
.visual {
    background-color: var(--green);
    border: 1px solid var(--green--b);
}

.section {
    font-size: 1.5rem;
    padding: 1rem;
    width: 100%;
    border-color: var(--main-border);
    border-width: medium thin;
    border-style: solid;
}

.parent {
    height: 100%;
}


/* 画像*/

.kondateImage {
    width: 30%;
    background-color: aqua;
}

.kondateInstruction {
    width: 50%;
    margin-left: 10px;
}

.box-1 {
    max-width: 100%;
    height: auto;
    width/***/
    : auto;
}

.visual {
    width: 100%;
    display: flex;
    /* justify-content: space-around; */
}

@media screen and (min-width: 900px) {
    .visual {
        width: 100%;
    }
}


/* 入力エリア*/

.cp_iptxt {
    position: relative;
    width: 50%;
    margin-bottom: 10px;
}

.cp_iptxt input[type='text'] {
    font: 15px/24px sans-serif;
    box-sizing: border-box;
    width: 100%;
    padding: 0.3em;
    transition: 0.3s;
    letter-spacing: 1px;
    color: #aaaaaa;
    border: 1px solid #1b2538;
    border-radius: 4px;
}

.ef input[type='text']:focus {
    border: 1px solid #da3c41;
    outline: none;
    box-shadow: 0 0 5px 1px rgba(218, 60, 65, .5);
}


/* ボタン*/

.btn-custom {
    border: none;
    padding: 0.5rem;
    border: 1px solid;
    font-weight: 600;
    letter-spacing: 0.1rem;
    text-transform: uppercase;
}

:where( button, input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]),
:where(input[type="file"])::file-selector-button {
    --_accent-light: hsl(210 10% 30%);
    --_accent-dark: hsl(210 50% 70%);
    --_accent: var(--_accent-light);
    --_text-light: hsl(210 10% 30%);
    --_text-dark: hsl(210 5% 95%);
    --_text: var(--_text-light);
    --_bg-light: hsl(0 0% 100%);
    --_bg-dark: hsl(210 9% 31%);
    --_bg: var(--_bg-light);
    --_input-well-light: hsl(210 16% 87%);
    --_input-well-dark: hsl(204 10% 10%);
    --_input-well: var(--_input-well-light);
    --_padding-inline: 1.75ch;
    --_padding-block: .75ch;
    --_border-radius: .5ch;
    --_border-light: hsl(210 14% 89%);
    --_border-dark: var(--_bg-dark);
    --_border: var(--_border-light);
    --_highlight-size: 0;
    --_highlight-light: hsl(210 10% 71% / 25%);
    --_highlight-dark: hsl(210 10% 5% / 25%);
    --_highlight: var(--_highlight-light);
    --_ink-shadow-light: 0 1px 0 var(--_border-light);
    --_ink-shadow-dark: 0 1px 0 hsl(210 11% 15%);
    --_ink-shadow: var(--_ink-shadow-light);
    --_icon-size: 2ch;
    --_icon-color: var(--_accent);
    --_shadow-color-light: 220 3% 15%;
    --_shadow-color-dark: 220 40% 2%;
    --_shadow-color: var(--_shadow-color-light);
    --_shadow-strength-light: 1%;
    --_shadow-strength-dark: 25%;
    --_shadow-strength: var(--_shadow-strength-light);
    --_shadow-1: 0 1px 2px -1px hsl(var(--_shadow-color)/calc(var(--_shadow-strength) + 9%));
    --_shadow-2: 0 3px 5px -2px hsl(var(--_shadow-color)/calc(var(--_shadow-strength) + 3%)), 0 7px 14px -5px hsl(var(--_shadow-color)/calc(var(--_shadow-strength) + 5%));
    --_shadow-depth-light: 0 1px var(--_border-light);
    --_shadow-depth-dark: 0 1px var(--_bg-dark);
    --_shadow-depth: var(--_shadow-depth-light);
    --_transition-motion-reduce: ;
    --_transition-motion-ok: box-shadow 145ms ease, outline-offset 145ms ease;
    --_transition: var(--_transition-motion-reduce);
    font: inherit;
    letter-spacing: inherit;
    line-height: 1.5;
    border-radius: var(--_border-radius);
}

@media (prefers-color-scheme: dark) {
     :where( button, input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]),
     :where(input[type="file"])::file-selector-button {
        --_bg: var(--_bg-dark);
        --_text: var(--_text-dark);
        --_border: var(--_border-dark);
        --_accent: var(--_accent-dark);
        --_highlight: var(--_highlight-dark);
        --_input-well: var(--_input-well-dark);
        --_ink-shadow: var(--_ink-shadow-dark);
        --_shadow-depth: var(--_shadow-depth-dark);
        --_shadow-color: var(--_shadow-color-dark);
        --_shadow-strength: var(--_shadow-strength-dark);
    }
}

@media (prefers-reduced-motion: no-preference) {
     :where( button, input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]),
     :where(input[type="file"])::file-selector-button {
        --_transition: var(--_transition-motion-ok);
    }
}

:where( button, input[type="button"], input[type="submit"], input[type="reset"]),
:where(input[type="file"])::file-selector-button {
    cursor: pointer;
    touch-action: manipulation;
    font-size: var(--_size, 1rem);
    background: var(--_bg);
    color: var(--_text);
    border: 2px solid var(--_border);
    box-shadow: var(--_shadow-2), var(--_shadow-depth), 0 0 0 var(--_highlight-size) var(--_highlight);
    text-shadow: var(--_ink-shadow);
    transition: var(--_transition);
    display: inline-flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    gap: 1ch;
    font-weight: 700;
    padding-block: var(--_padding-block);
    padding-inline: var(--_padding-inline);
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
}


/* icons */

:where( button, input[type="button"], input[type="submit"], input[type="reset"])> :where(svg, [data-icon]) {
    block-size: var(--_icon-size);
    inline-size: var(--_icon-size);
    stroke: var(--_icon-color);
    filter: drop-shadow(var(--_ink-shadow));
    flex-shrink: 0;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
}


/* focus */

:where(button, input):where(:not(:active)):focus-visible {
    outline-offset: 5px;
}


/* pressing */

:where( button, input[type="button"], input[type="submit"], input[type="reset"]):where(:not(:active):hover) {
    --_highlight-size: .5rem;
}


/* disabled */

:where( button, input[type="button"], input[type="submit"], input[type="reset"])[disabled] {
    --_bg: none;
    --_text-light: hsl(210 7% 40%);
    --_text-dark: hsl(210 11% 71%);
    cursor: not-allowed;
    box-shadow: var(--_shadow-1);
}


/* adaptive indigo text */

:where( [type="submit"], form button:not([type], [disabled])) {
    --_text: var(--_accent);
}


/* red reset */

:where([type="reset"]) {
    --_border-light: hsl(0 100% 83%);
    --_highlight-light: hsl(0 100% 89% / 20%);
    --_text-light: hsl(0 80% 50%);
    --_text-dark: hsl(0 100% 89%);
}

:where([type="reset"]):focus-visible {
    outline-color: currentColor;
}


/* file input */

:where(input[type="file"]) {
    inline-size: 100%;
    max-inline-size: max-content;
    background-color: var(--_input-well);
}

:where(input[type="button"]),
:where(input[type="file"])::file-selector-button {
    appearance: none;
}

:where(input[type="file"])::file-selector-button {
    margin-inline-end: var(--_padding-inline);
}


/* ↓レシピ一覧↓ */

ul {
    list-style-type: none;
    width: 80%;
}

h5 {
    font-weight: bold;
    margin-bottom: 10px;
    margin: 0;
    padding: 0;
}

li img {
    float: left;
    margin: 0 15px 0 0;
}

li p {
    font-size: 13px;
    line-height: 1.4;
    margin: 0;
    padding: 0;
}

li {
    padding: 10px;
    overflow: auto;
}

li:hover {
    background: #eee;
    cursor: pointer;
}


/* ↑レシピ一覧↑ */

div.sample img {
    width: 100px;
    height: 100px;
    /* 横幅を200pxに */
}